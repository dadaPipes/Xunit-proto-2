### YamlMime:ManagedReference
items:
- uid: Xunit.v3.IFactAttribute
  commentId: T:Xunit.v3.IFactAttribute
  id: IFactAttribute
  parent: Xunit.v3
  children:
  - Xunit.v3.IFactAttribute.DisplayName
  - Xunit.v3.IFactAttribute.Explicit
  - Xunit.v3.IFactAttribute.Skip
  - Xunit.v3.IFactAttribute.SkipExceptions
  - Xunit.v3.IFactAttribute.SkipType
  - Xunit.v3.IFactAttribute.SkipUnless
  - Xunit.v3.IFactAttribute.SkipWhen
  - Xunit.v3.IFactAttribute.Timeout
  langs:
  - csharp
  - vb
  name: IFactAttribute
  nameWithType: IFactAttribute
  fullName: Xunit.v3.IFactAttribute
  type: Interface
  source:
    remote:
      path: src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: IFactAttribute
    path: ../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
    startLine: 12
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Attribute that is applied to a method to indicate that it is a test method that should

    be run by the default test runner. Implementations must be decorated by

    <xref href="Xunit.v3.XunitTestCaseDiscovererAttribute" data-throw-if-not-resolved="false"></xref> to indicate which class is responsible

    for converting the test method into one or more tests.
  remarks: The attribute can only be applied to methods, and only one attribute is allowed.
  example: []
  syntax:
    content: public interface IFactAttribute
    content.vb: Public Interface IFactAttribute
  extensionMethods:
  - System.Object.Xunit.Internal.ObjectExtensions.AsValueTask
  - System.Object.Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Nullable{{T}},System.String)
  - System.Object.Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1({T},System.String)
- uid: Xunit.v3.IFactAttribute.DisplayName
  commentId: P:Xunit.v3.IFactAttribute.DisplayName
  id: DisplayName
  parent: Xunit.v3.IFactAttribute
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: IFactAttribute.DisplayName
  fullName: Xunit.v3.IFactAttribute.DisplayName
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: DisplayName
    path: ../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
    startLine: 18
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets the name of the test to be used when the test is skipped. When <code>null</code>

    is returned, will cause a default display name to be used.
  example: []
  syntax:
    content: string? DisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property DisplayName As String
  overload: Xunit.v3.IFactAttribute.DisplayName*
- uid: Xunit.v3.IFactAttribute.Explicit
  commentId: P:Xunit.v3.IFactAttribute.Explicit
  id: Explicit
  parent: Xunit.v3.IFactAttribute
  langs:
  - csharp
  - vb
  name: Explicit
  nameWithType: IFactAttribute.Explicit
  fullName: Xunit.v3.IFactAttribute.Explicit
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: Explicit
    path: ../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
    startLine: 25
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets a flag which indicates whether the test should only be run explicitly.

    An explicit test is skipped by default unless explicit tests are requested

    to be run.
  example: []
  syntax:
    content: bool Explicit { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Explicit As Boolean
  overload: Xunit.v3.IFactAttribute.Explicit*
- uid: Xunit.v3.IFactAttribute.Skip
  commentId: P:Xunit.v3.IFactAttribute.Skip
  id: Skip
  parent: Xunit.v3.IFactAttribute
  langs:
  - csharp
  - vb
  name: Skip
  nameWithType: IFactAttribute.Skip
  fullName: Xunit.v3.IFactAttribute.Skip
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: Skip
    path: ../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
    startLine: 35
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets the skip reason for the test. When <code>null</code> is returned, the test is

    not skipped.
  remarks: >-
    Skipping is conditional based on whether <xref href="Xunit.v3.IFactAttribute.SkipWhen" data-throw-if-not-resolved="false"></xref> or <xref href="Xunit.v3.IFactAttribute.SkipUnless" data-throw-if-not-resolved="false"></xref>

    is set.
  example: []
  syntax:
    content: string? Skip { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Skip As String
  overload: Xunit.v3.IFactAttribute.Skip*
- uid: Xunit.v3.IFactAttribute.SkipExceptions
  commentId: P:Xunit.v3.IFactAttribute.SkipExceptions
  id: SkipExceptions
  parent: Xunit.v3.IFactAttribute
  langs:
  - csharp
  - vb
  name: SkipExceptions
  nameWithType: IFactAttribute.SkipExceptions
  fullName: Xunit.v3.IFactAttribute.SkipExceptions
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: SkipExceptions
    path: ../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
    startLine: 43
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets exceptions that, when thrown, will cause the test to be skipped rather than failed.
  remarks: The skip reason will be the exception's message.
  example: []
  syntax:
    content: Type[]? SkipExceptions { get; }
    parameters: []
    return:
      type: System.Type[]
    content.vb: ReadOnly Property SkipExceptions As Type()
  overload: Xunit.v3.IFactAttribute.SkipExceptions*
- uid: Xunit.v3.IFactAttribute.SkipType
  commentId: P:Xunit.v3.IFactAttribute.SkipType
  id: SkipType
  parent: Xunit.v3.IFactAttribute
  langs:
  - csharp
  - vb
  name: SkipType
  nameWithType: IFactAttribute.SkipType
  fullName: Xunit.v3.IFactAttribute.SkipType
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: SkipType
    path: ../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
    startLine: 49
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets the type to retrieve <xref href="Xunit.v3.IFactAttribute.SkipUnless" data-throw-if-not-resolved="false"></xref> or <xref href="Xunit.v3.IFactAttribute.SkipWhen" data-throw-if-not-resolved="false"></xref> from. If not set,

    then the property will be retrieved from the unit test class.
  example: []
  syntax:
    content: Type? SkipType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: ReadOnly Property SkipType As Type
  overload: Xunit.v3.IFactAttribute.SkipType*
- uid: Xunit.v3.IFactAttribute.SkipUnless
  commentId: P:Xunit.v3.IFactAttribute.SkipUnless
  id: SkipUnless
  parent: Xunit.v3.IFactAttribute
  langs:
  - csharp
  - vb
  name: SkipUnless
  nameWithType: IFactAttribute.SkipUnless
  fullName: Xunit.v3.IFactAttribute.SkipUnless
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: SkipUnless
    path: ../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
    startLine: 61
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets the name of a public static property on the test class which returns <code>bool</code>

    to indicate whether the test should be skipped (<code>false</code>) or not (<code>true</code>).
  remarks: >-
    This property cannot be set if <xref href="Xunit.v3.IFactAttribute.SkipWhen" data-throw-if-not-resolved="false"></xref> is set. Setting both will

    result in a failed test.

    To ensure compile-time safety and easier refactoring, use the <code>nameof</code> operator,

    e.g., <code>SkipUnless = nameof(IsConditionMet)</code>.
  example: []
  syntax:
    content: string? SkipUnless { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property SkipUnless As String
  overload: Xunit.v3.IFactAttribute.SkipUnless*
- uid: Xunit.v3.IFactAttribute.SkipWhen
  commentId: P:Xunit.v3.IFactAttribute.SkipWhen
  id: SkipWhen
  parent: Xunit.v3.IFactAttribute
  langs:
  - csharp
  - vb
  name: SkipWhen
  nameWithType: IFactAttribute.SkipWhen
  fullName: Xunit.v3.IFactAttribute.SkipWhen
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: SkipWhen
    path: ../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
    startLine: 73
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets the name of a public static property on the test class which returns <code>bool</code>

    to indicate whether the test should be skipped (<code>true</code>) or not (<code>false</code>).
  remarks: >-
    This property cannot be set if <xref href="Xunit.v3.IFactAttribute.SkipUnless" data-throw-if-not-resolved="false"></xref> is set. Setting both will

    result in a failed test.

    To avoid issues during refactoring, it is recommended to use the <code>nameof</code> operator

    to reference the property, e.g., <code>SkipWhen = nameof(IsTestSkipped)</code>.
  example: []
  syntax:
    content: string? SkipWhen { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property SkipWhen As String
  overload: Xunit.v3.IFactAttribute.SkipWhen*
- uid: Xunit.v3.IFactAttribute.Timeout
  commentId: P:Xunit.v3.IFactAttribute.Timeout
  id: Timeout
  parent: Xunit.v3.IFactAttribute
  langs:
  - csharp
  - vb
  name: Timeout
  nameWithType: IFactAttribute.Timeout
  fullName: Xunit.v3.IFactAttribute.Timeout
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: Timeout
    path: ../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IFactAttribute.cs
    startLine: 85
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets the timeout for test (in milliseconds). When <code>0</code> is returned, the test

    will not have a timeout.
  remarks: >-
    WARNING: Using this with <xref href="Xunit.Sdk.ParallelAlgorithm.Aggressive" data-throw-if-not-resolved="false"></xref> will result

    in undefined behavior. Test timing and timeouts are only reliable when using

    <xref href="Xunit.Sdk.ParallelAlgorithm.Conservative" data-throw-if-not-resolved="false"></xref> (or when parallelization is disabled

    completely).
  example: []
  syntax:
    content: int Timeout { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Timeout As Integer
  overload: Xunit.v3.IFactAttribute.Timeout*
references:
- uid: Xunit.v3.XunitTestCaseDiscovererAttribute
  commentId: T:Xunit.v3.XunitTestCaseDiscovererAttribute
  parent: Xunit.v3
  href: Xunit.v3.XunitTestCaseDiscovererAttribute.html
  name: XunitTestCaseDiscovererAttribute
  nameWithType: XunitTestCaseDiscovererAttribute
  fullName: Xunit.v3.XunitTestCaseDiscovererAttribute
- uid: Xunit.v3
  commentId: N:Xunit.v3
  href: Xunit.html
  name: Xunit.v3
  nameWithType: Xunit.v3
  fullName: Xunit.v3
  spec.csharp:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.v3
    name: v3
    href: Xunit.v3.html
  spec.vb:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.v3
    name: v3
    href: Xunit.v3.html
- uid: System.Object.Xunit.Internal.ObjectExtensions.AsValueTask
  commentId: M:Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
  parent: Xunit.Internal.ObjectExtensions
  definition: Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
  href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_AsValueTask_System_Object_
  name: AsValueTask(object)
  nameWithType: ObjectExtensions.AsValueTask(object)
  fullName: Xunit.Internal.ObjectExtensions.AsValueTask(object)
  nameWithType.vb: ObjectExtensions.AsValueTask(Object)
  fullName.vb: Xunit.Internal.ObjectExtensions.AsValueTask(Object)
  name.vb: AsValueTask(Object)
  spec.csharp:
  - uid: Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
    name: AsValueTask
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_AsValueTask_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
    name: AsValueTask
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_AsValueTask_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Nullable{{T}},System.String)
  commentId: M:Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
  parent: Xunit.Internal.ObjectExtensions
  definition: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
  href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object_System_Nullable___0__System_String_
  name: ValidateNullablePropertyValue<T>(object, T?, string)
  nameWithType: ObjectExtensions.ValidateNullablePropertyValue<T>(object, T?, string)
  fullName: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue<T>(object, T?, string)
  nameWithType.vb: ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T?, String)
  fullName.vb: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T?, String)
  name.vb: ValidateNullablePropertyValue(Of T)(Object, T?, String)
  spec.csharp:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object_System_Nullable___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object_System_Nullable___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1({T},System.String)
  commentId: M:Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
  parent: Xunit.Internal.ObjectExtensions
  definition: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
  href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object___0_System_String_
  name: ValidateNullablePropertyValue<T>(object, T, string)
  nameWithType: ObjectExtensions.ValidateNullablePropertyValue<T>(object, T, string)
  fullName: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue<T>(object, T, string)
  nameWithType.vb: ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T, String)
  fullName.vb: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T, String)
  name.vb: ValidateNullablePropertyValue(Of T)(Object, T, String)
  spec.csharp:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
  commentId: M:Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
  isExternal: true
  href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_AsValueTask_System_Object_
  name: AsValueTask(object)
  nameWithType: ObjectExtensions.AsValueTask(object)
  fullName: Xunit.Internal.ObjectExtensions.AsValueTask(object)
  nameWithType.vb: ObjectExtensions.AsValueTask(Object)
  fullName.vb: Xunit.Internal.ObjectExtensions.AsValueTask(Object)
  name.vb: AsValueTask(Object)
  spec.csharp:
  - uid: Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
    name: AsValueTask
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_AsValueTask_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
    name: AsValueTask
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_AsValueTask_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Xunit.Internal.ObjectExtensions
  commentId: T:Xunit.Internal.ObjectExtensions
  parent: Xunit.Internal
  href: Xunit.Internal.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Xunit.Internal.ObjectExtensions
- uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
  commentId: M:Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
  isExternal: true
  href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object_System_Nullable___0__System_String_
  name: ValidateNullablePropertyValue<T>(object, T?, string)
  nameWithType: ObjectExtensions.ValidateNullablePropertyValue<T>(object, T?, string)
  fullName: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue<T>(object, T?, string)
  nameWithType.vb: ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T?, String)
  fullName.vb: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T?, String)
  name.vb: ValidateNullablePropertyValue(Of T)(Object, T?, String)
  spec.csharp:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object_System_Nullable___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object_System_Nullable___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
  commentId: M:Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
  isExternal: true
  href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object___0_System_String_
  name: ValidateNullablePropertyValue<T>(object, T, string)
  nameWithType: ObjectExtensions.ValidateNullablePropertyValue<T>(object, T, string)
  fullName: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue<T>(object, T, string)
  nameWithType.vb: ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T, String)
  fullName.vb: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T, String)
  name.vb: ValidateNullablePropertyValue(Of T)(Object, T, String)
  spec.csharp:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.Internal
  commentId: N:Xunit.Internal
  href: Xunit.html
  name: Xunit.Internal
  nameWithType: Xunit.Internal
  fullName: Xunit.Internal
  spec.csharp:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Internal
    name: Internal
    href: Xunit.Internal.html
  spec.vb:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Internal
    name: Internal
    href: Xunit.Internal.html
- uid: Xunit.v3.IFactAttribute.DisplayName*
  commentId: Overload:Xunit.v3.IFactAttribute.DisplayName
  href: Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_DisplayName
  name: DisplayName
  nameWithType: IFactAttribute.DisplayName
  fullName: Xunit.v3.IFactAttribute.DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.v3.IFactAttribute.Explicit*
  commentId: Overload:Xunit.v3.IFactAttribute.Explicit
  href: Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_Explicit
  name: Explicit
  nameWithType: IFactAttribute.Explicit
  fullName: Xunit.v3.IFactAttribute.Explicit
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Xunit.v3.IFactAttribute.SkipWhen
  commentId: P:Xunit.v3.IFactAttribute.SkipWhen
  parent: Xunit.v3.IFactAttribute
  href: Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_SkipWhen
  name: SkipWhen
  nameWithType: IFactAttribute.SkipWhen
  fullName: Xunit.v3.IFactAttribute.SkipWhen
- uid: Xunit.v3.IFactAttribute.SkipUnless
  commentId: P:Xunit.v3.IFactAttribute.SkipUnless
  parent: Xunit.v3.IFactAttribute
  href: Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_SkipUnless
  name: SkipUnless
  nameWithType: IFactAttribute.SkipUnless
  fullName: Xunit.v3.IFactAttribute.SkipUnless
- uid: Xunit.v3.IFactAttribute.Skip*
  commentId: Overload:Xunit.v3.IFactAttribute.Skip
  href: Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_Skip
  name: Skip
  nameWithType: IFactAttribute.Skip
  fullName: Xunit.v3.IFactAttribute.Skip
- uid: Xunit.v3.IFactAttribute
  commentId: T:Xunit.v3.IFactAttribute
  parent: Xunit.v3
  href: Xunit.v3.IFactAttribute.html
  name: IFactAttribute
  nameWithType: IFactAttribute
  fullName: Xunit.v3.IFactAttribute
- uid: Xunit.v3.IFactAttribute.SkipExceptions*
  commentId: Overload:Xunit.v3.IFactAttribute.SkipExceptions
  href: Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_SkipExceptions
  name: SkipExceptions
  nameWithType: IFactAttribute.SkipExceptions
  fullName: Xunit.v3.IFactAttribute.SkipExceptions
- uid: System.Type[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
- uid: Xunit.v3.IFactAttribute.SkipType*
  commentId: Overload:Xunit.v3.IFactAttribute.SkipType
  href: Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_SkipType
  name: SkipType
  nameWithType: IFactAttribute.SkipType
  fullName: Xunit.v3.IFactAttribute.SkipType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Xunit.v3.IFactAttribute.SkipUnless*
  commentId: Overload:Xunit.v3.IFactAttribute.SkipUnless
  href: Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_SkipUnless
  name: SkipUnless
  nameWithType: IFactAttribute.SkipUnless
  fullName: Xunit.v3.IFactAttribute.SkipUnless
- uid: Xunit.v3.IFactAttribute.SkipWhen*
  commentId: Overload:Xunit.v3.IFactAttribute.SkipWhen
  href: Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_SkipWhen
  name: SkipWhen
  nameWithType: IFactAttribute.SkipWhen
  fullName: Xunit.v3.IFactAttribute.SkipWhen
- uid: Xunit.Sdk.ParallelAlgorithm.Aggressive
  commentId: F:Xunit.Sdk.ParallelAlgorithm.Aggressive
  name: Aggressive
  nameWithType: ParallelAlgorithm.Aggressive
  fullName: Xunit.Sdk.ParallelAlgorithm.Aggressive
- uid: Xunit.Sdk.ParallelAlgorithm.Conservative
  commentId: F:Xunit.Sdk.ParallelAlgorithm.Conservative
  name: Conservative
  nameWithType: ParallelAlgorithm.Conservative
  fullName: Xunit.Sdk.ParallelAlgorithm.Conservative
- uid: Xunit.v3.IFactAttribute.Timeout*
  commentId: Overload:Xunit.v3.IFactAttribute.Timeout
  href: Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_Timeout
  name: Timeout
  nameWithType: IFactAttribute.Timeout
  fullName: Xunit.v3.IFactAttribute.Timeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
