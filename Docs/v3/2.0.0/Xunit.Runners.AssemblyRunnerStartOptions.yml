### YamlMime:ManagedReference
items:
- uid: Xunit.Runners.AssemblyRunnerStartOptions
  commentId: T:Xunit.Runners.AssemblyRunnerStartOptions
  id: AssemblyRunnerStartOptions
  parent: Xunit.Runners
  children:
  - Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages
  - Xunit.Runners.AssemblyRunnerStartOptions.Empty
  - Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages
  - Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads
  - Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay
  - Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions
  - Xunit.Runners.AssemblyRunnerStartOptions.Parallel
  - Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm
  - Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories
  - Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun
  langs:
  - csharp
  - vb
  name: AssemblyRunnerStartOptions
  nameWithType: AssemblyRunnerStartOptions
  fullName: Xunit.Runners.AssemblyRunnerStartOptions
  type: Class
  source:
    remote:
      path: src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: AssemblyRunnerStartOptions
    path: ../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
    startLine: 8
  assemblies:
  - xunit.v3.runner.utility.netfx
  namespace: Xunit.Runners
  summary: Represents options to be used when calling <xref href="Xunit.Runners.AssemblyRunner.Start(Xunit.Runners.AssemblyRunnerStartOptions)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public class AssemblyRunnerStartOptions
    content.vb: Public Class AssemblyRunnerStartOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Xunit.Internal.ObjectExtensions.AsValueTask
  - System.Object.Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Nullable{{T}},System.String)
  - System.Object.Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1({T},System.String)
- uid: Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages
  commentId: P:Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages
  id: DiagnosticMessages
  parent: Xunit.Runners.AssemblyRunnerStartOptions
  langs:
  - csharp
  - vb
  name: DiagnosticMessages
  nameWithType: AssemblyRunnerStartOptions.DiagnosticMessages
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages
  type: Property
  source:
    remote:
      path: src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: DiagnosticMessages
    path: ../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
    startLine: 17
  assemblies:
  - xunit.v3.runner.utility.netfx
  namespace: Xunit.Runners
  summary: >-
    Indicates whether diagnostic messages should be generated. If unset (or set

    to <code>null</code>), will use the value from the configuration file (and if that

    isn't set, will use the default value of <code>false</code>).
  example: []
  syntax:
    content: public bool? DiagnosticMessages { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property DiagnosticMessages As Boolean?
  overload: Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages*
- uid: Xunit.Runners.AssemblyRunnerStartOptions.Empty
  commentId: P:Xunit.Runners.AssemblyRunnerStartOptions.Empty
  id: Empty
  parent: Xunit.Runners.AssemblyRunnerStartOptions
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: AssemblyRunnerStartOptions.Empty
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.Empty
  type: Property
  source:
    remote:
      path: src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: Empty
    path: ../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
    startLine: 22
  assemblies:
  - xunit.v3.runner.utility.netfx
  namespace: Xunit.Runners
  summary: Gets an empty set of options (representing all default behavior).
  example: []
  syntax:
    content: public static AssemblyRunnerStartOptions Empty { get; }
    parameters: []
    return:
      type: Xunit.Runners.AssemblyRunnerStartOptions
    content.vb: Public Shared ReadOnly Property Empty As AssemblyRunnerStartOptions
  overload: Xunit.Runners.AssemblyRunnerStartOptions.Empty*
- uid: Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages
  commentId: P:Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages
  id: InternalDiagnosticMessages
  parent: Xunit.Runners.AssemblyRunnerStartOptions
  langs:
  - csharp
  - vb
  name: InternalDiagnosticMessages
  nameWithType: AssemblyRunnerStartOptions.InternalDiagnosticMessages
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages
  type: Property
  source:
    remote:
      path: src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: InternalDiagnosticMessages
    path: ../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
    startLine: 32
  assemblies:
  - xunit.v3.runner.utility.netfx
  namespace: Xunit.Runners
  summary: >-
    Indicates whether internal diagnostic messages should be generated (these are

    typically low level diagnostic messages from the test engine itself that may

    be requested by xUnit.net developers when debugging issues inside xUnit.net

    itself). If unset (or set to <code>null</code>), will use the value from the

    configuraiton file (and if that isn't set, will use the default value

    of <code>false</code>).
  example: []
  syntax:
    content: public bool? InternalDiagnosticMessages { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property InternalDiagnosticMessages As Boolean?
  overload: Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages*
- uid: Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads
  commentId: P:Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads
  id: MaxParallelThreads
  parent: Xunit.Runners.AssemblyRunnerStartOptions
  langs:
  - csharp
  - vb
  name: MaxParallelThreads
  nameWithType: AssemblyRunnerStartOptions.MaxParallelThreads
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads
  type: Property
  source:
    remote:
      path: src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: MaxParallelThreads
    path: ../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
    startLine: 43
  assemblies:
  - xunit.v3.runner.utility.netfx
  namespace: Xunit.Runners
  summary: >-
    Indicates how many threads to use to run parallel tests (will have no affect

    if parallelism is turned off). A value of <code>-1</code> indicates a desire for

    no thread limit; a value of <code>0</code> indicates a desire for the default

    limit (which is <xref href="System.Environment.ProcessorCount" data-throw-if-not-resolved="false"></xref>); a value greater

    than 0 indicates an exact thread count is desired. If unset (or set to

    <code>null</code>), will use the value from the configuration file (and if that

    isn't set, will use the default value of <xref href="System.Environment.ProcessorCount" data-throw-if-not-resolved="false"></xref>).
  example: []
  syntax:
    content: public int? MaxParallelThreads { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property MaxParallelThreads As Integer?
  overload: Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads*
- uid: Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay
  commentId: P:Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay
  id: MethodDisplay
  parent: Xunit.Runners.AssemblyRunnerStartOptions
  langs:
  - csharp
  - vb
  name: MethodDisplay
  nameWithType: AssemblyRunnerStartOptions.MethodDisplay
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay
  type: Property
  source:
    remote:
      path: src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: MethodDisplay
    path: ../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
    startLine: 50
  assemblies:
  - xunit.v3.runner.utility.netfx
  namespace: Xunit.Runners
  summary: >-
    Indicates how to display test methods. If unset (or set to <code>null</code>),

    will use the value from the configuration file (and if that isn't set,

    will use the default value of <xref href="Xunit.Sdk.TestMethodDisplay.ClassAndMethod" data-throw-if-not-resolved="false"></xref>).
  example: []
  syntax:
    content: public TestMethodDisplay? MethodDisplay { get; set; }
    parameters: []
    return:
      type: System.Nullable{Xunit.Sdk.TestMethodDisplay}
    content.vb: Public Property MethodDisplay As TestMethodDisplay?
  overload: Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay*
- uid: Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions
  commentId: P:Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions
  id: MethodDisplayOptions
  parent: Xunit.Runners.AssemblyRunnerStartOptions
  langs:
  - csharp
  - vb
  name: MethodDisplayOptions
  nameWithType: AssemblyRunnerStartOptions.MethodDisplayOptions
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions
  type: Property
  source:
    remote:
      path: src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: MethodDisplayOptions
    path: ../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
    startLine: 57
  assemblies:
  - xunit.v3.runner.utility.netfx
  namespace: Xunit.Runners
  summary: >-
    Indicates how to interpret test method names for display. If unset (or set

    to <code>null</code>), will use the value from the configuration file (and if that

    isn't set, will use the default value of <xref href="Xunit.Sdk.TestMethodDisplayOptions.None" data-throw-if-not-resolved="false"></xref>).
  example: []
  syntax:
    content: public TestMethodDisplayOptions? MethodDisplayOptions { get; set; }
    parameters: []
    return:
      type: System.Nullable{Xunit.Sdk.TestMethodDisplayOptions}
    content.vb: Public Property MethodDisplayOptions As TestMethodDisplayOptions?
  overload: Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions*
- uid: Xunit.Runners.AssemblyRunnerStartOptions.Parallel
  commentId: P:Xunit.Runners.AssemblyRunnerStartOptions.Parallel
  id: Parallel
  parent: Xunit.Runners.AssemblyRunnerStartOptions
  langs:
  - csharp
  - vb
  name: Parallel
  nameWithType: AssemblyRunnerStartOptions.Parallel
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.Parallel
  type: Property
  source:
    remote:
      path: src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: Parallel
    path: ../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
    startLine: 65
  assemblies:
  - xunit.v3.runner.utility.netfx
  namespace: Xunit.Runners
  summary: >-
    Indicates whether to run test collections in parallel. If unset (or set to

    <code>null</code>), will use the value from the configuration file (and if that

    isn't set, will use the default value of <code>true</code>). Note that test

    collection parallelization is only available in v2 test projects.
  example: []
  syntax:
    content: public bool? Parallel { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property Parallel As Boolean?
  overload: Xunit.Runners.AssemblyRunnerStartOptions.Parallel*
- uid: Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm
  commentId: P:Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm
  id: ParallelAlgorithm
  parent: Xunit.Runners.AssemblyRunnerStartOptions
  langs:
  - csharp
  - vb
  name: ParallelAlgorithm
  nameWithType: AssemblyRunnerStartOptions.ParallelAlgorithm
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm
  type: Property
  source:
    remote:
      path: src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: ParallelAlgorithm
    path: ../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
    startLine: 76
  assemblies:
  - xunit.v3.runner.utility.netfx
  namespace: Xunit.Runners
  summary: >-
    Indicates which algorithm to use when parallelizing tests (will have no effect

    if parallelism is turned off or if the max parallel threads is set to <code>-1</code>).

    If unset (or set to <code>null</code>), will use the value from the configuration

    file (and if that isn't set, will use the default value of

    <xref href="Xunit.Sdk.ParallelAlgorithm.Conservative" data-throw-if-not-resolved="false"></xref>. For more information on the

    parallelism algorithms, see

    <a href="https://xunit.net/docs/running-tests-in-parallel#algorithms">https://xunit.net/docs/running-tests-in-parallel#algorithms</a>.
  example: []
  syntax:
    content: public ParallelAlgorithm? ParallelAlgorithm { get; set; }
    parameters: []
    return:
      type: System.Nullable{Xunit.Sdk.ParallelAlgorithm}
    content.vb: Public Property ParallelAlgorithm As ParallelAlgorithm?
  overload: Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm*
- uid: Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories
  commentId: P:Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories
  id: PreEnumerateTheories
  parent: Xunit.Runners.AssemblyRunnerStartOptions
  langs:
  - csharp
  - vb
  name: PreEnumerateTheories
  nameWithType: AssemblyRunnerStartOptions.PreEnumerateTheories
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories
  type: Property
  source:
    remote:
      path: src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: PreEnumerateTheories
    path: ../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
    startLine: 84
  assemblies:
  - xunit.v3.runner.utility.netfx
  namespace: Xunit.Runners
  summary: >-
    Indicates whether theories should be pre-enumerated (that is, enumerated during

    discovery rather than during execution). If unset (or set to <code>null</code>),

    will use the value from the configuration file (and if that isn't set,

    will use the default value of <code>false</code>).
  example: []
  syntax:
    content: public bool? PreEnumerateTheories { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property PreEnumerateTheories As Boolean?
  overload: Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories*
- uid: Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun
  commentId: P:Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun
  id: TypesToRun
  parent: Xunit.Runners.AssemblyRunnerStartOptions
  langs:
  - csharp
  - vb
  name: TypesToRun
  nameWithType: AssemblyRunnerStartOptions.TypesToRun
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun
  type: Property
  source:
    remote:
      path: src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: TypesToRun
    path: ../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs
    startLine: 89
  assemblies:
  - xunit.v3.runner.utility.netfx
  namespace: Xunit.Runners
  summary: Indicates the types to be run. If empty, will run all types in the assembly.
  example: []
  syntax:
    content: public string[] TypesToRun { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property TypesToRun As String()
  overload: Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun*
references:
- uid: Xunit.Runners.AssemblyRunner.Start(Xunit.Runners.AssemblyRunnerStartOptions)
  commentId: M:Xunit.Runners.AssemblyRunner.Start(Xunit.Runners.AssemblyRunnerStartOptions)
  href: Xunit.Runners.AssemblyRunner.html#Xunit_Runners_AssemblyRunner_Start_Xunit_Runners_AssemblyRunnerStartOptions_
  name: Start(AssemblyRunnerStartOptions)
  nameWithType: AssemblyRunner.Start(AssemblyRunnerStartOptions)
  fullName: Xunit.Runners.AssemblyRunner.Start(Xunit.Runners.AssemblyRunnerStartOptions)
  spec.csharp:
  - uid: Xunit.Runners.AssemblyRunner.Start(Xunit.Runners.AssemblyRunnerStartOptions)
    name: Start
    href: Xunit.Runners.AssemblyRunner.html#Xunit_Runners_AssemblyRunner_Start_Xunit_Runners_AssemblyRunnerStartOptions_
  - name: (
  - uid: Xunit.Runners.AssemblyRunnerStartOptions
    name: AssemblyRunnerStartOptions
    href: Xunit.Runners.AssemblyRunnerStartOptions.html
  - name: )
  spec.vb:
  - uid: Xunit.Runners.AssemblyRunner.Start(Xunit.Runners.AssemblyRunnerStartOptions)
    name: Start
    href: Xunit.Runners.AssemblyRunner.html#Xunit_Runners_AssemblyRunner_Start_Xunit_Runners_AssemblyRunnerStartOptions_
  - name: (
  - uid: Xunit.Runners.AssemblyRunnerStartOptions
    name: AssemblyRunnerStartOptions
    href: Xunit.Runners.AssemblyRunnerStartOptions.html
  - name: )
- uid: Xunit.Runners
  commentId: N:Xunit.Runners
  href: Xunit.html
  name: Xunit.Runners
  nameWithType: Xunit.Runners
  fullName: Xunit.Runners
  spec.csharp:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Runners
    name: Runners
    href: Xunit.Runners.html
  spec.vb:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Runners
    name: Runners
    href: Xunit.Runners.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.Xunit.Internal.ObjectExtensions.AsValueTask
  commentId: M:Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
  parent: Xunit.Internal.ObjectExtensions
  definition: Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
  href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_AsValueTask_System_Object_
  name: AsValueTask(object)
  nameWithType: ObjectExtensions.AsValueTask(object)
  fullName: Xunit.Internal.ObjectExtensions.AsValueTask(object)
  nameWithType.vb: ObjectExtensions.AsValueTask(Object)
  fullName.vb: Xunit.Internal.ObjectExtensions.AsValueTask(Object)
  name.vb: AsValueTask(Object)
  spec.csharp:
  - uid: Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
    name: AsValueTask
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_AsValueTask_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
    name: AsValueTask
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_AsValueTask_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Nullable{{T}},System.String)
  commentId: M:Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
  parent: Xunit.Internal.ObjectExtensions
  definition: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
  href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object_System_Nullable___0__System_String_
  name: ValidateNullablePropertyValue<T>(object, T?, string)
  nameWithType: ObjectExtensions.ValidateNullablePropertyValue<T>(object, T?, string)
  fullName: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue<T>(object, T?, string)
  nameWithType.vb: ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T?, String)
  fullName.vb: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T?, String)
  name.vb: ValidateNullablePropertyValue(Of T)(Object, T?, String)
  spec.csharp:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object_System_Nullable___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object_System_Nullable___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1({T},System.String)
  commentId: M:Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
  parent: Xunit.Internal.ObjectExtensions
  definition: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
  href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object___0_System_String_
  name: ValidateNullablePropertyValue<T>(object, T, string)
  nameWithType: ObjectExtensions.ValidateNullablePropertyValue<T>(object, T, string)
  fullName: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue<T>(object, T, string)
  nameWithType.vb: ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T, String)
  fullName.vb: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T, String)
  name.vb: ValidateNullablePropertyValue(Of T)(Object, T, String)
  spec.csharp:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
  commentId: M:Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
  isExternal: true
  href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_AsValueTask_System_Object_
  name: AsValueTask(object)
  nameWithType: ObjectExtensions.AsValueTask(object)
  fullName: Xunit.Internal.ObjectExtensions.AsValueTask(object)
  nameWithType.vb: ObjectExtensions.AsValueTask(Object)
  fullName.vb: Xunit.Internal.ObjectExtensions.AsValueTask(Object)
  name.vb: AsValueTask(Object)
  spec.csharp:
  - uid: Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
    name: AsValueTask
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_AsValueTask_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.Internal.ObjectExtensions.AsValueTask(System.Object)
    name: AsValueTask
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_AsValueTask_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Xunit.Internal.ObjectExtensions
  commentId: T:Xunit.Internal.ObjectExtensions
  parent: Xunit.Internal
  href: Xunit.Internal.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Xunit.Internal.ObjectExtensions
- uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
  commentId: M:Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
  isExternal: true
  href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object_System_Nullable___0__System_String_
  name: ValidateNullablePropertyValue<T>(object, T?, string)
  nameWithType: ObjectExtensions.ValidateNullablePropertyValue<T>(object, T?, string)
  fullName: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue<T>(object, T?, string)
  nameWithType.vb: ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T?, String)
  fullName.vb: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T?, String)
  name.vb: ValidateNullablePropertyValue(Of T)(Object, T?, String)
  spec.csharp:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object_System_Nullable___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,System.Nullable{``0},System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object_System_Nullable___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
  commentId: M:Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
  isExternal: true
  href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object___0_System_String_
  name: ValidateNullablePropertyValue<T>(object, T, string)
  nameWithType: ObjectExtensions.ValidateNullablePropertyValue<T>(object, T, string)
  fullName: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue<T>(object, T, string)
  nameWithType.vb: ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T, String)
  fullName.vb: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue(Of T)(Object, T, String)
  name.vb: ValidateNullablePropertyValue(Of T)(Object, T, String)
  spec.csharp:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.Internal.ObjectExtensions.ValidateNullablePropertyValue``1(System.Object,``0,System.String)
    name: ValidateNullablePropertyValue
    href: Xunit.Internal.ObjectExtensions.html#Xunit_Internal_ObjectExtensions_ValidateNullablePropertyValue__1_System_Object___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.Internal
  commentId: N:Xunit.Internal
  href: Xunit.html
  name: Xunit.Internal
  nameWithType: Xunit.Internal
  fullName: Xunit.Internal
  spec.csharp:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Internal
    name: Internal
    href: Xunit.Internal.html
  spec.vb:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Internal
    name: Internal
    href: Xunit.Internal.html
- uid: Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages*
  commentId: Overload:Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages
  href: Xunit.Runners.AssemblyRunnerStartOptions.html#Xunit_Runners_AssemblyRunnerStartOptions_DiagnosticMessages
  name: DiagnosticMessages
  nameWithType: AssemblyRunnerStartOptions.DiagnosticMessages
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Xunit.Runners.AssemblyRunnerStartOptions.Empty*
  commentId: Overload:Xunit.Runners.AssemblyRunnerStartOptions.Empty
  href: Xunit.Runners.AssemblyRunnerStartOptions.html#Xunit_Runners_AssemblyRunnerStartOptions_Empty
  name: Empty
  nameWithType: AssemblyRunnerStartOptions.Empty
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.Empty
- uid: Xunit.Runners.AssemblyRunnerStartOptions
  commentId: T:Xunit.Runners.AssemblyRunnerStartOptions
  parent: Xunit.Runners
  href: Xunit.Runners.AssemblyRunnerStartOptions.html
  name: AssemblyRunnerStartOptions
  nameWithType: AssemblyRunnerStartOptions
  fullName: Xunit.Runners.AssemblyRunnerStartOptions
- uid: Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages*
  commentId: Overload:Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages
  href: Xunit.Runners.AssemblyRunnerStartOptions.html#Xunit_Runners_AssemblyRunnerStartOptions_InternalDiagnosticMessages
  name: InternalDiagnosticMessages
  nameWithType: AssemblyRunnerStartOptions.InternalDiagnosticMessages
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages
- uid: System.Environment.ProcessorCount
  commentId: P:System.Environment.ProcessorCount
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.environment.processorcount
  name: ProcessorCount
  nameWithType: Environment.ProcessorCount
  fullName: System.Environment.ProcessorCount
- uid: Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads*
  commentId: Overload:Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads
  href: Xunit.Runners.AssemblyRunnerStartOptions.html#Xunit_Runners_AssemblyRunnerStartOptions_MaxParallelThreads
  name: MaxParallelThreads
  nameWithType: AssemblyRunnerStartOptions.MaxParallelThreads
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: Xunit.Sdk.TestMethodDisplay.ClassAndMethod
  commentId: F:Xunit.Sdk.TestMethodDisplay.ClassAndMethod
  href: Xunit.Sdk.TestMethodDisplay.html#Xunit_Sdk_TestMethodDisplay_ClassAndMethod
  name: ClassAndMethod
  nameWithType: TestMethodDisplay.ClassAndMethod
  fullName: Xunit.Sdk.TestMethodDisplay.ClassAndMethod
- uid: Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay*
  commentId: Overload:Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay
  href: Xunit.Runners.AssemblyRunnerStartOptions.html#Xunit_Runners_AssemblyRunnerStartOptions_MethodDisplay
  name: MethodDisplay
  nameWithType: AssemblyRunnerStartOptions.MethodDisplay
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay
- uid: System.Nullable{Xunit.Sdk.TestMethodDisplay}
  commentId: T:System.Nullable{Xunit.Sdk.TestMethodDisplay}
  parent: System
  definition: System.Nullable`1
  name: TestMethodDisplay?
  nameWithType: TestMethodDisplay?
  fullName: Xunit.Sdk.TestMethodDisplay?
  spec.csharp:
  - uid: Xunit.Sdk.TestMethodDisplay
    name: TestMethodDisplay
  - name: '?'
  spec.vb:
  - uid: Xunit.Sdk.TestMethodDisplay
    name: TestMethodDisplay
  - name: '?'
- uid: Xunit.Sdk.TestMethodDisplayOptions.None
  commentId: F:Xunit.Sdk.TestMethodDisplayOptions.None
  name: None
  nameWithType: TestMethodDisplayOptions.None
  fullName: Xunit.Sdk.TestMethodDisplayOptions.None
- uid: Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions*
  commentId: Overload:Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions
  href: Xunit.Runners.AssemblyRunnerStartOptions.html#Xunit_Runners_AssemblyRunnerStartOptions_MethodDisplayOptions
  name: MethodDisplayOptions
  nameWithType: AssemblyRunnerStartOptions.MethodDisplayOptions
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions
- uid: System.Nullable{Xunit.Sdk.TestMethodDisplayOptions}
  commentId: T:System.Nullable{Xunit.Sdk.TestMethodDisplayOptions}
  parent: System
  definition: System.Nullable`1
  name: TestMethodDisplayOptions?
  nameWithType: TestMethodDisplayOptions?
  fullName: Xunit.Sdk.TestMethodDisplayOptions?
  spec.csharp:
  - uid: Xunit.Sdk.TestMethodDisplayOptions
    name: TestMethodDisplayOptions
  - name: '?'
  spec.vb:
  - uid: Xunit.Sdk.TestMethodDisplayOptions
    name: TestMethodDisplayOptions
  - name: '?'
- uid: Xunit.Runners.AssemblyRunnerStartOptions.Parallel*
  commentId: Overload:Xunit.Runners.AssemblyRunnerStartOptions.Parallel
  href: Xunit.Runners.AssemblyRunnerStartOptions.html#Xunit_Runners_AssemblyRunnerStartOptions_Parallel
  name: Parallel
  nameWithType: AssemblyRunnerStartOptions.Parallel
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.Parallel
- uid: Xunit.Sdk.ParallelAlgorithm.Conservative
  commentId: F:Xunit.Sdk.ParallelAlgorithm.Conservative
  name: Conservative
  nameWithType: ParallelAlgorithm.Conservative
  fullName: Xunit.Sdk.ParallelAlgorithm.Conservative
- uid: Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm*
  commentId: Overload:Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm
  href: Xunit.Runners.AssemblyRunnerStartOptions.html#Xunit_Runners_AssemblyRunnerStartOptions_ParallelAlgorithm
  name: ParallelAlgorithm
  nameWithType: AssemblyRunnerStartOptions.ParallelAlgorithm
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm
- uid: System.Nullable{Xunit.Sdk.ParallelAlgorithm}
  commentId: T:System.Nullable{Xunit.Sdk.ParallelAlgorithm}
  parent: System
  definition: System.Nullable`1
  name: ParallelAlgorithm?
  nameWithType: ParallelAlgorithm?
  fullName: Xunit.Sdk.ParallelAlgorithm?
  spec.csharp:
  - uid: Xunit.Sdk.ParallelAlgorithm
    name: ParallelAlgorithm
  - name: '?'
  spec.vb:
  - uid: Xunit.Sdk.ParallelAlgorithm
    name: ParallelAlgorithm
  - name: '?'
- uid: Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories*
  commentId: Overload:Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories
  href: Xunit.Runners.AssemblyRunnerStartOptions.html#Xunit_Runners_AssemblyRunnerStartOptions_PreEnumerateTheories
  name: PreEnumerateTheories
  nameWithType: AssemblyRunnerStartOptions.PreEnumerateTheories
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories
- uid: Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun*
  commentId: Overload:Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun
  href: Xunit.Runners.AssemblyRunnerStartOptions.html#Xunit_Runners_AssemblyRunnerStartOptions_TypesToRun
  name: TypesToRun
  nameWithType: AssemblyRunnerStartOptions.TypesToRun
  fullName: Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
