### YamlMime:ManagedReference
items:
- uid: Xunit.Internal.DictionaryExtensions
  commentId: T:Xunit.Internal.DictionaryExtensions
  id: DictionaryExtensions
  parent: Xunit.Internal
  children:
  - Xunit.Internal.DictionaryExtensions.AddOrGet``2(System.Collections.Generic.Dictionary{``0,``1},``0)
  - Xunit.Internal.DictionaryExtensions.AddOrGet``2(System.Collections.Generic.Dictionary{``0,``1},``0,System.Func{``1})
  - Xunit.Internal.DictionaryExtensions.AddRange``1(System.Collections.Generic.HashSet{``0},System.Collections.Generic.IEnumerable{``0})
  - Xunit.Internal.DictionaryExtensions.Add``2(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.HashSet{``1}},``0,``1)
  - Xunit.Internal.DictionaryExtensions.Contains``2(System.Collections.Generic.IReadOnlyDictionary{``0,System.Collections.Generic.IReadOnlyCollection{``1}},``0,``1,System.Collections.Generic.IEqualityComparer{``1})
  - Xunit.Internal.DictionaryExtensions.ToReadOnly``2(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.HashSet{``1}})
  - Xunit.Internal.DictionaryExtensions.ToReadOnly``2(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.List{``1}})
  - Xunit.Internal.DictionaryExtensions.ToReadWrite``2(System.Collections.Generic.IReadOnlyDictionary{``0,System.Collections.Generic.IReadOnlyCollection{``1}},System.Collections.Generic.IEqualityComparer{``0})
  langs:
  - csharp
  - vb
  name: DictionaryExtensions
  nameWithType: DictionaryExtensions
  fullName: Xunit.Internal.DictionaryExtensions
  type: Class
  source:
    remote:
      path: src/xunit.v3.common/Internal/DictionaryExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: DictionaryExtensions
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/DictionaryExtensions.cs
    startLine: 9
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: INTERNAL CLASS. DO NOT USE.
  example: []
  syntax:
    content: public static class DictionaryExtensions
    content.vb: Public Module DictionaryExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Xunit.Internal.DictionaryExtensions.Add``2(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.HashSet{``1}},``0,``1)
  commentId: M:Xunit.Internal.DictionaryExtensions.Add``2(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.HashSet{``1}},``0,``1)
  id: Add``2(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.HashSet{``1}},``0,``1)
  isExtensionMethod: true
  parent: Xunit.Internal.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: Add<TKey, TValue>(Dictionary<TKey, HashSet<TValue>>, TKey, TValue)
  nameWithType: DictionaryExtensions.Add<TKey, TValue>(Dictionary<TKey, HashSet<TValue>>, TKey, TValue)
  fullName: Xunit.Internal.DictionaryExtensions.Add<TKey, TValue>(System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>, TKey, TValue)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Internal/DictionaryExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: Add
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/DictionaryExtensions.cs
    startLine: 12
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: ''
  example: []
  syntax:
    content: 'public static void Add<TKey, TValue>(this Dictionary<TKey, HashSet<TValue>> dictionary, TKey key, TValue value) where TKey : notnull'
    parameters:
    - id: dictionary
      type: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    typeParameters:
    - id: TKey
    - id: TValue
    content.vb: Public Shared Sub Add(Of TKey, TValue)(dictionary As Dictionary(Of TKey, HashSet(Of TValue)), key As TKey, value As TValue)
  overload: Xunit.Internal.DictionaryExtensions.Add*
  nameWithType.vb: DictionaryExtensions.Add(Of TKey, TValue)(Dictionary(Of TKey, HashSet(Of TValue)), TKey, TValue)
  fullName.vb: Xunit.Internal.DictionaryExtensions.Add(Of TKey, TValue)(System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)), TKey, TValue)
  name.vb: Add(Of TKey, TValue)(Dictionary(Of TKey, HashSet(Of TValue)), TKey, TValue)
- uid: Xunit.Internal.DictionaryExtensions.AddOrGet``2(System.Collections.Generic.Dictionary{``0,``1},``0)
  commentId: M:Xunit.Internal.DictionaryExtensions.AddOrGet``2(System.Collections.Generic.Dictionary{``0,``1},``0)
  id: AddOrGet``2(System.Collections.Generic.Dictionary{``0,``1},``0)
  isExtensionMethod: true
  parent: Xunit.Internal.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: AddOrGet<TKey, TValue>(Dictionary<TKey, TValue>, TKey)
  nameWithType: DictionaryExtensions.AddOrGet<TKey, TValue>(Dictionary<TKey, TValue>, TKey)
  fullName: Xunit.Internal.DictionaryExtensions.AddOrGet<TKey, TValue>(System.Collections.Generic.Dictionary<TKey, TValue>, TKey)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Internal/DictionaryExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: AddOrGet
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/DictionaryExtensions.cs
    startLine: 24
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: ''
  example: []
  syntax:
    content: 'public static TValue AddOrGet<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, TKey key) where TKey : notnull where TValue : new()'
    parameters:
    - id: dictionary
      type: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    - id: key
      type: '{TKey}'
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: '{TValue}'
    content.vb: Public Shared Function AddOrGet(Of TKey, TValue As New)(dictionary As Dictionary(Of TKey, TValue), key As TKey) As TValue
  overload: Xunit.Internal.DictionaryExtensions.AddOrGet*
  nameWithType.vb: DictionaryExtensions.AddOrGet(Of TKey, TValue)(Dictionary(Of TKey, TValue), TKey)
  fullName.vb: Xunit.Internal.DictionaryExtensions.AddOrGet(Of TKey, TValue)(System.Collections.Generic.Dictionary(Of TKey, TValue), TKey)
  name.vb: AddOrGet(Of TKey, TValue)(Dictionary(Of TKey, TValue), TKey)
- uid: Xunit.Internal.DictionaryExtensions.AddOrGet``2(System.Collections.Generic.Dictionary{``0,``1},``0,System.Func{``1})
  commentId: M:Xunit.Internal.DictionaryExtensions.AddOrGet``2(System.Collections.Generic.Dictionary{``0,``1},``0,System.Func{``1})
  id: AddOrGet``2(System.Collections.Generic.Dictionary{``0,``1},``0,System.Func{``1})
  isExtensionMethod: true
  parent: Xunit.Internal.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: AddOrGet<TKey, TValue>(Dictionary<TKey, TValue>, TKey, Func<TValue>)
  nameWithType: DictionaryExtensions.AddOrGet<TKey, TValue>(Dictionary<TKey, TValue>, TKey, Func<TValue>)
  fullName: Xunit.Internal.DictionaryExtensions.AddOrGet<TKey, TValue>(System.Collections.Generic.Dictionary<TKey, TValue>, TKey, System.Func<TValue>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Internal/DictionaryExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: AddOrGet
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/DictionaryExtensions.cs
    startLine: 36
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: ''
  example: []
  syntax:
    content: 'public static TValue AddOrGet<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, TKey key, Func<TValue> newValue) where TKey : notnull'
    parameters:
    - id: dictionary
      type: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    - id: key
      type: '{TKey}'
    - id: newValue
      type: System.Func{{TValue}}
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: '{TValue}'
    content.vb: Public Shared Function AddOrGet(Of TKey, TValue)(dictionary As Dictionary(Of TKey, TValue), key As TKey, newValue As Func(Of TValue)) As TValue
  overload: Xunit.Internal.DictionaryExtensions.AddOrGet*
  nameWithType.vb: DictionaryExtensions.AddOrGet(Of TKey, TValue)(Dictionary(Of TKey, TValue), TKey, Func(Of TValue))
  fullName.vb: Xunit.Internal.DictionaryExtensions.AddOrGet(Of TKey, TValue)(System.Collections.Generic.Dictionary(Of TKey, TValue), TKey, System.Func(Of TValue))
  name.vb: AddOrGet(Of TKey, TValue)(Dictionary(Of TKey, TValue), TKey, Func(Of TValue))
- uid: Xunit.Internal.DictionaryExtensions.AddRange``1(System.Collections.Generic.HashSet{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:Xunit.Internal.DictionaryExtensions.AddRange``1(System.Collections.Generic.HashSet{``0},System.Collections.Generic.IEnumerable{``0})
  id: AddRange``1(System.Collections.Generic.HashSet{``0},System.Collections.Generic.IEnumerable{``0})
  isExtensionMethod: true
  parent: Xunit.Internal.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: AddRange<T>(HashSet<T>, IEnumerable<T>)
  nameWithType: DictionaryExtensions.AddRange<T>(HashSet<T>, IEnumerable<T>)
  fullName: Xunit.Internal.DictionaryExtensions.AddRange<T>(System.Collections.Generic.HashSet<T>, System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Internal/DictionaryExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: AddRange
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/DictionaryExtensions.cs
    startLine: 55
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: ''
  example: []
  syntax:
    content: public static void AddRange<T>(this HashSet<T> hashSet, IEnumerable<T> values)
    parameters:
    - id: hashSet
      type: System.Collections.Generic.HashSet{{T}}
    - id: values
      type: System.Collections.Generic.IEnumerable{{T}}
    typeParameters:
    - id: T
    content.vb: Public Shared Sub AddRange(Of T)(hashSet As HashSet(Of T), values As IEnumerable(Of T))
  overload: Xunit.Internal.DictionaryExtensions.AddRange*
  nameWithType.vb: DictionaryExtensions.AddRange(Of T)(HashSet(Of T), IEnumerable(Of T))
  fullName.vb: Xunit.Internal.DictionaryExtensions.AddRange(Of T)(System.Collections.Generic.HashSet(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(Of T)(HashSet(Of T), IEnumerable(Of T))
- uid: Xunit.Internal.DictionaryExtensions.Contains``2(System.Collections.Generic.IReadOnlyDictionary{``0,System.Collections.Generic.IReadOnlyCollection{``1}},``0,``1,System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:Xunit.Internal.DictionaryExtensions.Contains``2(System.Collections.Generic.IReadOnlyDictionary{``0,System.Collections.Generic.IReadOnlyCollection{``1}},``0,``1,System.Collections.Generic.IEqualityComparer{``1})
  id: Contains``2(System.Collections.Generic.IReadOnlyDictionary{``0,System.Collections.Generic.IReadOnlyCollection{``1}},``0,``1,System.Collections.Generic.IEqualityComparer{``1})
  isExtensionMethod: true
  parent: Xunit.Internal.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: Contains<TKey, TValue>(IReadOnlyDictionary<TKey, IReadOnlyCollection<TValue>>, TKey, TValue, IEqualityComparer<TValue>)
  nameWithType: DictionaryExtensions.Contains<TKey, TValue>(IReadOnlyDictionary<TKey, IReadOnlyCollection<TValue>>, TKey, TValue, IEqualityComparer<TValue>)
  fullName: Xunit.Internal.DictionaryExtensions.Contains<TKey, TValue>(System.Collections.Generic.IReadOnlyDictionary<TKey, System.Collections.Generic.IReadOnlyCollection<TValue>>, TKey, TValue, System.Collections.Generic.IEqualityComparer<TValue>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Internal/DictionaryExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: Contains
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/DictionaryExtensions.cs
    startLine: 67
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: ''
  example: []
  syntax:
    content: 'public static bool Contains<TKey, TValue>(this IReadOnlyDictionary<TKey, IReadOnlyCollection<TValue>> dictionary, TKey key, TValue value, IEqualityComparer<TValue> valueComparer) where TKey : notnull'
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IReadOnlyDictionary{{TKey},System.Collections.Generic.IReadOnlyCollection{{TValue}}}
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: System.Boolean
    content.vb: Public Shared Function Contains(Of TKey, TValue)(dictionary As IReadOnlyDictionary(Of TKey, IReadOnlyCollection(Of TValue)), key As TKey, value As TValue, valueComparer As IEqualityComparer(Of TValue)) As Boolean
  overload: Xunit.Internal.DictionaryExtensions.Contains*
  nameWithType.vb: DictionaryExtensions.Contains(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, IReadOnlyCollection(Of TValue)), TKey, TValue, IEqualityComparer(Of TValue))
  fullName.vb: Xunit.Internal.DictionaryExtensions.Contains(Of TKey, TValue)(System.Collections.Generic.IReadOnlyDictionary(Of TKey, System.Collections.Generic.IReadOnlyCollection(Of TValue)), TKey, TValue, System.Collections.Generic.IEqualityComparer(Of TValue))
  name.vb: Contains(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, IReadOnlyCollection(Of TValue)), TKey, TValue, IEqualityComparer(Of TValue))
- uid: Xunit.Internal.DictionaryExtensions.ToReadOnly``2(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.HashSet{``1}})
  commentId: M:Xunit.Internal.DictionaryExtensions.ToReadOnly``2(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.HashSet{``1}})
  id: ToReadOnly``2(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.HashSet{``1}})
  isExtensionMethod: true
  parent: Xunit.Internal.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: ToReadOnly<TKey, TValue>(Dictionary<TKey, HashSet<TValue>>)
  nameWithType: DictionaryExtensions.ToReadOnly<TKey, TValue>(Dictionary<TKey, HashSet<TValue>>)
  fullName: Xunit.Internal.DictionaryExtensions.ToReadOnly<TKey, TValue>(System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Internal/DictionaryExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: ToReadOnly
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/DictionaryExtensions.cs
    startLine: 81
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: ''
  example: []
  syntax:
    content: 'public static IReadOnlyDictionary<TKey, IReadOnlyCollection<TValue>> ToReadOnly<TKey, TValue>(this Dictionary<TKey, HashSet<TValue>> dictionary) where TKey : notnull'
    parameters:
    - id: dictionary
      type: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{{TKey},System.Collections.Generic.IReadOnlyCollection{{TValue}}}
    content.vb: Public Shared Function ToReadOnly(Of TKey, TValue)(dictionary As Dictionary(Of TKey, HashSet(Of TValue))) As IReadOnlyDictionary(Of TKey, IReadOnlyCollection(Of TValue))
  overload: Xunit.Internal.DictionaryExtensions.ToReadOnly*
  nameWithType.vb: DictionaryExtensions.ToReadOnly(Of TKey, TValue)(Dictionary(Of TKey, HashSet(Of TValue)))
  fullName.vb: Xunit.Internal.DictionaryExtensions.ToReadOnly(Of TKey, TValue)(System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)))
  name.vb: ToReadOnly(Of TKey, TValue)(Dictionary(Of TKey, HashSet(Of TValue)))
- uid: Xunit.Internal.DictionaryExtensions.ToReadOnly``2(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.List{``1}})
  commentId: M:Xunit.Internal.DictionaryExtensions.ToReadOnly``2(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.List{``1}})
  id: ToReadOnly``2(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.List{``1}})
  isExtensionMethod: true
  parent: Xunit.Internal.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: ToReadOnly<TKey, TValue>(Dictionary<TKey, List<TValue>>)
  nameWithType: DictionaryExtensions.ToReadOnly<TKey, TValue>(Dictionary<TKey, List<TValue>>)
  fullName: Xunit.Internal.DictionaryExtensions.ToReadOnly<TKey, TValue>(System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.List<TValue>>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Internal/DictionaryExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: ToReadOnly
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/DictionaryExtensions.cs
    startLine: 90
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: ''
  example: []
  syntax:
    content: 'public static IReadOnlyDictionary<TKey, IReadOnlyCollection<TValue>> ToReadOnly<TKey, TValue>(this Dictionary<TKey, List<TValue>> dictionary) where TKey : notnull'
    parameters:
    - id: dictionary
      type: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.List{{TValue}}}
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{{TKey},System.Collections.Generic.IReadOnlyCollection{{TValue}}}
    content.vb: Public Shared Function ToReadOnly(Of TKey, TValue)(dictionary As Dictionary(Of TKey, List(Of TValue))) As IReadOnlyDictionary(Of TKey, IReadOnlyCollection(Of TValue))
  overload: Xunit.Internal.DictionaryExtensions.ToReadOnly*
  nameWithType.vb: DictionaryExtensions.ToReadOnly(Of TKey, TValue)(Dictionary(Of TKey, List(Of TValue)))
  fullName.vb: Xunit.Internal.DictionaryExtensions.ToReadOnly(Of TKey, TValue)(System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.List(Of TValue)))
  name.vb: ToReadOnly(Of TKey, TValue)(Dictionary(Of TKey, List(Of TValue)))
- uid: Xunit.Internal.DictionaryExtensions.ToReadWrite``2(System.Collections.Generic.IReadOnlyDictionary{``0,System.Collections.Generic.IReadOnlyCollection{``1}},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:Xunit.Internal.DictionaryExtensions.ToReadWrite``2(System.Collections.Generic.IReadOnlyDictionary{``0,System.Collections.Generic.IReadOnlyCollection{``1}},System.Collections.Generic.IEqualityComparer{``0})
  id: ToReadWrite``2(System.Collections.Generic.IReadOnlyDictionary{``0,System.Collections.Generic.IReadOnlyCollection{``1}},System.Collections.Generic.IEqualityComparer{``0})
  isExtensionMethod: true
  parent: Xunit.Internal.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: ToReadWrite<TKey, TValue>(IReadOnlyDictionary<TKey, IReadOnlyCollection<TValue>>, IEqualityComparer<TKey>?)
  nameWithType: DictionaryExtensions.ToReadWrite<TKey, TValue>(IReadOnlyDictionary<TKey, IReadOnlyCollection<TValue>>, IEqualityComparer<TKey>?)
  fullName: Xunit.Internal.DictionaryExtensions.ToReadWrite<TKey, TValue>(System.Collections.Generic.IReadOnlyDictionary<TKey, System.Collections.Generic.IReadOnlyCollection<TValue>>, System.Collections.Generic.IEqualityComparer<TKey>?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Internal/DictionaryExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: ToReadWrite
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/DictionaryExtensions.cs
    startLine: 99
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: ''
  example: []
  syntax:
    content: 'public static Dictionary<TKey, HashSet<TValue>> ToReadWrite<TKey, TValue>(this IReadOnlyDictionary<TKey, IReadOnlyCollection<TValue>> dictionary, IEqualityComparer<TKey>? comparer) where TKey : notnull'
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IReadOnlyDictionary{{TKey},System.Collections.Generic.IReadOnlyCollection{{TValue}}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
    content.vb: Public Shared Function ToReadWrite(Of TKey, TValue)(dictionary As IReadOnlyDictionary(Of TKey, IReadOnlyCollection(Of TValue)), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, HashSet(Of TValue))
  overload: Xunit.Internal.DictionaryExtensions.ToReadWrite*
  nameWithType.vb: DictionaryExtensions.ToReadWrite(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, IReadOnlyCollection(Of TValue)), IEqualityComparer(Of TKey))
  fullName.vb: Xunit.Internal.DictionaryExtensions.ToReadWrite(Of TKey, TValue)(System.Collections.Generic.IReadOnlyDictionary(Of TKey, System.Collections.Generic.IReadOnlyCollection(Of TValue)), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToReadWrite(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, IReadOnlyCollection(Of TValue)), IEqualityComparer(Of TKey))
references:
- uid: Xunit.Internal
  commentId: N:Xunit.Internal
  href: Xunit.html
  name: Xunit.Internal
  nameWithType: Xunit.Internal
  fullName: Xunit.Internal
  spec.csharp:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Internal
    name: Internal
    href: Xunit.Internal.html
  spec.vb:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Internal
    name: Internal
    href: Xunit.Internal.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.Internal.DictionaryExtensions.Add*
  commentId: Overload:Xunit.Internal.DictionaryExtensions.Add
  href: Xunit.Internal.DictionaryExtensions.html#Xunit_Internal_DictionaryExtensions_Add__2_System_Collections_Generic_Dictionary___0_System_Collections_Generic_HashSet___1_____0___1_
  name: Add
  nameWithType: DictionaryExtensions.Add
  fullName: Xunit.Internal.DictionaryExtensions.Add
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  commentId: T:System.Collections.Generic.Dictionary{``0,System.Collections.Generic.HashSet{``1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, HashSet<TValue>>
  nameWithType: Dictionary<TKey, HashSet<TValue>>
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue))
  name.vb: Dictionary(Of TKey, HashSet(Of TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Xunit.Internal.DictionaryExtensions.AddOrGet*
  commentId: Overload:Xunit.Internal.DictionaryExtensions.AddOrGet
  href: Xunit.Internal.DictionaryExtensions.html#Xunit_Internal_DictionaryExtensions_AddOrGet__2_System_Collections_Generic_Dictionary___0___1____0_
  name: AddOrGet
  nameWithType: DictionaryExtensions.AddOrGet
  fullName: Xunit.Internal.DictionaryExtensions.AddOrGet
- uid: System.Collections.Generic.Dictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.Dictionary{``0,``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Func{{TValue}}
  commentId: T:System.Func{``1}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TValue>
  nameWithType: Func<TValue>
  fullName: System.Func<TValue>
  nameWithType.vb: Func(Of TValue)
  fullName.vb: System.Func(Of TValue)
  name.vb: Func(Of TValue)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Xunit.Internal.DictionaryExtensions.AddRange*
  commentId: Overload:Xunit.Internal.DictionaryExtensions.AddRange
  href: Xunit.Internal.DictionaryExtensions.html#Xunit_Internal_DictionaryExtensions_AddRange__1_System_Collections_Generic_HashSet___0__System_Collections_Generic_IEnumerable___0__
  name: AddRange
  nameWithType: DictionaryExtensions.AddRange
  fullName: Xunit.Internal.DictionaryExtensions.AddRange
- uid: System.Collections.Generic.HashSet{{T}}
  commentId: T:System.Collections.Generic.HashSet{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Xunit.Internal.DictionaryExtensions.Contains*
  commentId: Overload:Xunit.Internal.DictionaryExtensions.Contains
  href: Xunit.Internal.DictionaryExtensions.html#Xunit_Internal_DictionaryExtensions_Contains__2_System_Collections_Generic_IReadOnlyDictionary___0_System_Collections_Generic_IReadOnlyCollection___1_____0___1_System_Collections_Generic_IEqualityComparer___1__
  name: Contains
  nameWithType: DictionaryExtensions.Contains
  fullName: Xunit.Internal.DictionaryExtensions.Contains
- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},System.Collections.Generic.IReadOnlyCollection{{TValue}}}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{``0,System.Collections.Generic.IReadOnlyCollection{``1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, IReadOnlyCollection<TValue>>
  nameWithType: IReadOnlyDictionary<TKey, IReadOnlyCollection<TValue>>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, System.Collections.Generic.IReadOnlyCollection<TValue>>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, IReadOnlyCollection(Of TValue))
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, System.Collections.Generic.IReadOnlyCollection(Of TValue))
  name.vb: IReadOnlyDictionary(Of TKey, IReadOnlyCollection(Of TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEqualityComparer{{TValue}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<TValue>
  nameWithType: IEqualityComparer<TValue>
  fullName: System.Collections.Generic.IEqualityComparer<TValue>
  nameWithType.vb: IEqualityComparer(Of TValue)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TValue)
  name.vb: IEqualityComparer(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Xunit.Internal.DictionaryExtensions.ToReadOnly*
  commentId: Overload:Xunit.Internal.DictionaryExtensions.ToReadOnly
  href: Xunit.Internal.DictionaryExtensions.html#Xunit_Internal_DictionaryExtensions_ToReadOnly__2_System_Collections_Generic_Dictionary___0_System_Collections_Generic_HashSet___1___
  name: ToReadOnly
  nameWithType: DictionaryExtensions.ToReadOnly
  fullName: Xunit.Internal.DictionaryExtensions.ToReadOnly
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.List{{TValue}}}
  commentId: T:System.Collections.Generic.Dictionary{``0,System.Collections.Generic.List{``1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, List<TValue>>
  nameWithType: Dictionary<TKey, List<TValue>>
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.List<TValue>>
  nameWithType.vb: Dictionary(Of TKey, List(Of TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.List(Of TValue))
  name.vb: Dictionary(Of TKey, List(Of TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: Xunit.Internal.DictionaryExtensions.ToReadWrite*
  commentId: Overload:Xunit.Internal.DictionaryExtensions.ToReadWrite
  href: Xunit.Internal.DictionaryExtensions.html#Xunit_Internal_DictionaryExtensions_ToReadWrite__2_System_Collections_Generic_IReadOnlyDictionary___0_System_Collections_Generic_IReadOnlyCollection___1___System_Collections_Generic_IEqualityComparer___0__
  name: ToReadWrite
  nameWithType: DictionaryExtensions.ToReadWrite
  fullName: Xunit.Internal.DictionaryExtensions.ToReadWrite
- uid: System.Collections.Generic.IEqualityComparer{{TKey}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<TKey>
  nameWithType: IEqualityComparer<TKey>
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
  nameWithType.vb: IEqualityComparer(Of TKey)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TKey)
  name.vb: IEqualityComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
