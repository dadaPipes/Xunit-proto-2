### YamlMime:ManagedReference
items:
- uid: Xunit.Internal.AssemblyExtensions
  commentId: T:Xunit.Internal.AssemblyExtensions
  id: AssemblyExtensions
  parent: Xunit.Internal
  children:
  - Xunit.Internal.AssemblyExtensions.GetLocalCodeBase(System.Reflection.Assembly)
  - Xunit.Internal.AssemblyExtensions.GetLocalCodeBase(System.String,System.Char)
  - Xunit.Internal.AssemblyExtensions.GetSafeCodeBase(System.Reflection.Assembly)
  - Xunit.Internal.AssemblyExtensions.GetSafeLocation(System.Reflection.Assembly)
  - Xunit.Internal.AssemblyExtensions.GetTargetFramework(System.Reflection.Assembly)
  - Xunit.Internal.AssemblyExtensions.UnknownTargetFramework
  langs:
  - csharp
  - vb
  name: AssemblyExtensions
  nameWithType: AssemblyExtensions
  fullName: Xunit.Internal.AssemblyExtensions
  type: Class
  source:
    remote:
      path: src/xunit.v3.common/Internal/AssemblyExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: AssemblyExtensions
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/AssemblyExtensions.cs
    startLine: 14
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: INTERNAL CLASS. DO NOT USE.
  example: []
  syntax:
    content: public static class AssemblyExtensions
    content.vb: Public Module AssemblyExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Xunit.Internal.AssemblyExtensions.UnknownTargetFramework
  commentId: F:Xunit.Internal.AssemblyExtensions.UnknownTargetFramework
  id: UnknownTargetFramework
  parent: Xunit.Internal.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: UnknownTargetFramework
  nameWithType: AssemblyExtensions.UnknownTargetFramework
  fullName: Xunit.Internal.AssemblyExtensions.UnknownTargetFramework
  type: Field
  source:
    remote:
      path: src/xunit.v3.common/Internal/AssemblyExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: UnknownTargetFramework
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/AssemblyExtensions.cs
    startLine: 19
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: Gets the value for an unknown target framework.
  example: []
  syntax:
    content: public const string UnknownTargetFramework = "UnknownTargetFramework"
    return:
      type: System.String
    content.vb: Public Const UnknownTargetFramework As String = "UnknownTargetFramework"
- uid: Xunit.Internal.AssemblyExtensions.GetLocalCodeBase(System.Reflection.Assembly)
  commentId: M:Xunit.Internal.AssemblyExtensions.GetLocalCodeBase(System.Reflection.Assembly)
  id: GetLocalCodeBase(System.Reflection.Assembly)
  isExtensionMethod: true
  parent: Xunit.Internal.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: GetLocalCodeBase(Assembly?)
  nameWithType: AssemblyExtensions.GetLocalCodeBase(Assembly?)
  fullName: Xunit.Internal.AssemblyExtensions.GetLocalCodeBase(System.Reflection.Assembly?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Internal/AssemblyExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: GetLocalCodeBase
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/AssemblyExtensions.cs
    startLine: 22
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: ''
  example: []
  syntax:
    content: public static string? GetLocalCodeBase(this Assembly? assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
    return:
      type: System.String
    content.vb: Public Shared Function GetLocalCodeBase(assembly As Assembly) As String
  overload: Xunit.Internal.AssemblyExtensions.GetLocalCodeBase*
  nameWithType.vb: AssemblyExtensions.GetLocalCodeBase(Assembly)
  fullName.vb: Xunit.Internal.AssemblyExtensions.GetLocalCodeBase(System.Reflection.Assembly)
  name.vb: GetLocalCodeBase(Assembly)
- uid: Xunit.Internal.AssemblyExtensions.GetLocalCodeBase(System.String,System.Char)
  commentId: M:Xunit.Internal.AssemblyExtensions.GetLocalCodeBase(System.String,System.Char)
  id: GetLocalCodeBase(System.String,System.Char)
  parent: Xunit.Internal.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: GetLocalCodeBase(string?, char)
  nameWithType: AssemblyExtensions.GetLocalCodeBase(string?, char)
  fullName: Xunit.Internal.AssemblyExtensions.GetLocalCodeBase(string?, char)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Internal/AssemblyExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: GetLocalCodeBase
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/AssemblyExtensions.cs
    startLine: 27
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: ''
  example: []
  syntax:
    content: public static string? GetLocalCodeBase(string? codeBase, char directorySeparator)
    parameters:
    - id: codeBase
      type: System.String
    - id: directorySeparator
      type: System.Char
    return:
      type: System.String
    content.vb: Public Shared Function GetLocalCodeBase(codeBase As String, directorySeparator As Char) As String
  overload: Xunit.Internal.AssemblyExtensions.GetLocalCodeBase*
  nameWithType.vb: AssemblyExtensions.GetLocalCodeBase(String, Char)
  fullName.vb: Xunit.Internal.AssemblyExtensions.GetLocalCodeBase(String, Char)
  name.vb: GetLocalCodeBase(String, Char)
- uid: Xunit.Internal.AssemblyExtensions.GetSafeCodeBase(System.Reflection.Assembly)
  commentId: M:Xunit.Internal.AssemblyExtensions.GetSafeCodeBase(System.Reflection.Assembly)
  id: GetSafeCodeBase(System.Reflection.Assembly)
  isExtensionMethod: true
  parent: Xunit.Internal.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: GetSafeCodeBase(Assembly?)
  nameWithType: AssemblyExtensions.GetSafeCodeBase(Assembly?)
  fullName: Xunit.Internal.AssemblyExtensions.GetSafeCodeBase(System.Reflection.Assembly?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Internal/AssemblyExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: GetSafeCodeBase
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/AssemblyExtensions.cs
    startLine: 63
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: Safely gets the code base of an assembly.
  example: []
  syntax:
    content: public static string? GetSafeCodeBase(this Assembly? assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly.
    return:
      type: System.String
      description: >-
        If the assembly is null, or is dynamic, then it returns <code>null</code>; otherwise, it returns the value
            from <xref href="System.Reflection.Assembly.CodeBase" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function GetSafeCodeBase(assembly As Assembly) As String
  overload: Xunit.Internal.AssemblyExtensions.GetSafeCodeBase*
  nameWithType.vb: AssemblyExtensions.GetSafeCodeBase(Assembly)
  fullName.vb: Xunit.Internal.AssemblyExtensions.GetSafeCodeBase(System.Reflection.Assembly)
  name.vb: GetSafeCodeBase(Assembly)
- uid: Xunit.Internal.AssemblyExtensions.GetSafeLocation(System.Reflection.Assembly)
  commentId: M:Xunit.Internal.AssemblyExtensions.GetSafeLocation(System.Reflection.Assembly)
  id: GetSafeLocation(System.Reflection.Assembly)
  isExtensionMethod: true
  parent: Xunit.Internal.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: GetSafeLocation(Assembly?)
  nameWithType: AssemblyExtensions.GetSafeLocation(Assembly?)
  fullName: Xunit.Internal.AssemblyExtensions.GetSafeLocation(System.Reflection.Assembly?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Internal/AssemblyExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: GetSafeLocation
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/AssemblyExtensions.cs
    startLine: 73
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: Safely gets the location of an assembly.
  example: []
  syntax:
    content: public static string? GetSafeLocation(this Assembly? assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly.
    return:
      type: System.String
      description: >-
        If the assembly is null, or is dynamic, then it returns <code>null</code>; otherwise, it returns the value
            from <xref href="System.Reflection.Assembly.Location" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function GetSafeLocation(assembly As Assembly) As String
  overload: Xunit.Internal.AssemblyExtensions.GetSafeLocation*
  nameWithType.vb: AssemblyExtensions.GetSafeLocation(Assembly)
  fullName.vb: Xunit.Internal.AssemblyExtensions.GetSafeLocation(System.Reflection.Assembly)
  name.vb: GetSafeLocation(Assembly)
- uid: Xunit.Internal.AssemblyExtensions.GetTargetFramework(System.Reflection.Assembly)
  commentId: M:Xunit.Internal.AssemblyExtensions.GetTargetFramework(System.Reflection.Assembly)
  id: GetTargetFramework(System.Reflection.Assembly)
  isExtensionMethod: true
  parent: Xunit.Internal.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: GetTargetFramework(Assembly)
  nameWithType: AssemblyExtensions.GetTargetFramework(Assembly)
  fullName: Xunit.Internal.AssemblyExtensions.GetTargetFramework(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Internal/AssemblyExtensions.cs
      branch: 229879b7653ec0573f36ca4759ccfc915be11a21
      repo: https://github.com/xunit/xunit.git
    id: GetTargetFramework
    path: ../v3/v3-2.0.0/src/xunit.v3.common/Internal/AssemblyExtensions.cs
    startLine: 84
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Internal
  summary: Gets the target framework name for the given assembly.
  example: []
  syntax:
    content: public static string GetTargetFramework(this Assembly assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly.
    return:
      type: System.String
      description: >-
        The target framework (typically in a format like ".NETFramework,Version=v4.7.2"
            or ".NETCoreApp,Version=v6.0"). If the target framework type is unknown (missing file,
            missing attribute, etc.) then returns "UnknownTargetFramework".
    content.vb: Public Shared Function GetTargetFramework(assembly As Assembly) As String
  overload: Xunit.Internal.AssemblyExtensions.GetTargetFramework*
references:
- uid: Xunit.Internal
  commentId: N:Xunit.Internal
  href: Xunit.html
  name: Xunit.Internal
  nameWithType: Xunit.Internal
  fullName: Xunit.Internal
  spec.csharp:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Internal
    name: Internal
    href: Xunit.Internal.html
  spec.vb:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Internal
    name: Internal
    href: Xunit.Internal.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Xunit.Internal.AssemblyExtensions.GetLocalCodeBase*
  commentId: Overload:Xunit.Internal.AssemblyExtensions.GetLocalCodeBase
  href: Xunit.Internal.AssemblyExtensions.html#Xunit_Internal_AssemblyExtensions_GetLocalCodeBase_System_Reflection_Assembly_
  name: GetLocalCodeBase
  nameWithType: AssemblyExtensions.GetLocalCodeBase
  fullName: Xunit.Internal.AssemblyExtensions.GetLocalCodeBase
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: System.Reflection.Assembly.CodeBase
  commentId: P:System.Reflection.Assembly.CodeBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly.codebase
  name: CodeBase
  nameWithType: Assembly.CodeBase
  fullName: System.Reflection.Assembly.CodeBase
- uid: Xunit.Internal.AssemblyExtensions.GetSafeCodeBase*
  commentId: Overload:Xunit.Internal.AssemblyExtensions.GetSafeCodeBase
  href: Xunit.Internal.AssemblyExtensions.html#Xunit_Internal_AssemblyExtensions_GetSafeCodeBase_System_Reflection_Assembly_
  name: GetSafeCodeBase
  nameWithType: AssemblyExtensions.GetSafeCodeBase
  fullName: Xunit.Internal.AssemblyExtensions.GetSafeCodeBase
- uid: System.Reflection.Assembly.Location
  commentId: P:System.Reflection.Assembly.Location
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly.location
  name: Location
  nameWithType: Assembly.Location
  fullName: System.Reflection.Assembly.Location
- uid: Xunit.Internal.AssemblyExtensions.GetSafeLocation*
  commentId: Overload:Xunit.Internal.AssemblyExtensions.GetSafeLocation
  href: Xunit.Internal.AssemblyExtensions.html#Xunit_Internal_AssemblyExtensions_GetSafeLocation_System_Reflection_Assembly_
  name: GetSafeLocation
  nameWithType: AssemblyExtensions.GetSafeLocation
  fullName: Xunit.Internal.AssemblyExtensions.GetSafeLocation
- uid: Xunit.Internal.AssemblyExtensions.GetTargetFramework*
  commentId: Overload:Xunit.Internal.AssemblyExtensions.GetTargetFramework
  href: Xunit.Internal.AssemblyExtensions.html#Xunit_Internal_AssemblyExtensions_GetTargetFramework_System_Reflection_Assembly_
  name: GetTargetFramework
  nameWithType: AssemblyExtensions.GetTargetFramework
  fullName: Xunit.Internal.AssemblyExtensions.GetTargetFramework
